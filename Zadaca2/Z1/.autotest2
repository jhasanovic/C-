{
    "id": 0,
    "name": "Tehnike programiranja (2020\/2021), Zada\u0107a 2, Zadatak 1",
    "languages": [
        "C++"
    ],
    "tools": {
        "compile": {
            "require": "g++",
            "features": [
                "optimize",
                "warn",
                "pedantic",
                "C++14"
            ]
        },
        "compile[debug]": {
            "require": "g++",
            "features": [
                "debug",
                "C++14"
            ]
        },
        "execute": {
            "environment": {
                "timeout": 10,
                "memory": 1000000
            }
        },
        "debug": [],
        "profile[memcheck]": {
            "require": "valgrind",
            "features": [
                "memcheck"
            ],
            "environment": {
                "timeout": 10
            }
        },
        "profile[sgcheck]": {
            "require": "valgrind",
            "features": [
                "sgcheck"
            ],
            "environment": {
                "timeout": 10
            }
        }
    },
    "tests": [
        {
            "id": 1,
            "name": "Test 1",
            "options": [
                "silent",
                "terminate"
            ],
            "compile": []
        },
        {
            "id": 2,
            "name": "Test 2",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "above_main",
                    "code": "void ispisiTablu(std::vector<std::vector<Polje>> polja){\n   for(int i = 0; i < polja.size(); i++) {\n          for(int j = 0; j < polja.at(i).size(); j++) std::cout << int(polja.at(i).at(j)) << \" \";\n          std::cout << std::endl;\n        }\n}",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/ AT 1: Test funkcije KreirajIgru\n    {\n        std::vector<std::vector<int>> mine = {{0,2}, {1,3}, {1,5}, {4,2}, {5,1}, {5,5}} ;\n        std::vector<std::vector<Polje>> tabla = KreirajIgru(6, mine);\n        ispisiTablu(tabla);\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "0 0 2 0 0 0 \n0 0 0 2 0 2 \n0 0 0 0 0 0 \n0 0 0 0 0 0 \n0 0 2 0 0 0 \n0 2 0 0 0 2 "
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 3,
            "name": "Test 3",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/AT 2: Test funkcije Okolina (primjer iz postavke)\n    {\n        std::vector<std::vector<int>> mine = {{0,1}, {0,4}, {1,3}, {1,4}, {2,0}, {2,1}, {2,3}} ;\n        std::vector<std::vector<Polje>> tabla = KreirajIgru(5, mine);\n        std::vector<std::vector<int>> okolina = PrikaziOkolinu(tabla, 1, 1);\n        for(int i = 0; i < okolina.size(); i++)\n        {\n            for(int j = 0; j < okolina.at(i).size(); j++)\n                std::cout << okolina.at(i).at(j) << \" \";\n            std::cout << std::endl;\n        }\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 0 2 \n3 3 4 \n1 1 3 \n"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 4,
            "name": "Test 4",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "above_main",
                    "code": "void ispisiTablu(std::vector<std::vector<Polje>> polja){\n   for(int i = 0; i < polja.size(); i++) {\n          for(int j = 0; j < polja.at(i).size(); j++) std::cout << int(polja.at(i).at(j)) << \" \";\n          std::cout << std::endl;\n        }\n}",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/AT 3: Test funkcije Blokiraj i Deblokiraj polje\n    {\n        std::vector<std::vector<int>> mine = {{0,2}, {1,3}, {1,5}, {4,2}, {5,1}, {5,5}} ;\n        std::vector<std::vector<Polje>> tabla = KreirajIgru(6, mine);\n        BlokirajPolje(tabla, 1,3);\n        BlokirajPolje(tabla, 1,4);\n        BlokirajPolje(tabla, 0,2);\n        BlokirajPolje(tabla, 0,3);\n        DeblokirajPolje(tabla, 0,2);\n        DeblokirajPolje(tabla, 0,3);\n        ispisiTablu(tabla);\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "0 0 2 0 0 0 \n0 0 0 5 3 2 \n0 0 0 0 0 0 \n0 0 0 0 0 0 \n0 0 2 0 0 0 \n0 2 0 0 0 2 \n"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 5,
            "name": "Test 5",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/ AT 4: Test funkcije Idi sa 4 parametara\n    {\n        std::vector<std::vector<int>> mine = {{0,2}, {1,3}, {1,5}, {4,2}, {5,1}, {5,5}} ;\n        std::vector<std::vector<Polje>> tabla = KreirajIgru(6, mine);\n        int x = 0, y = 0;\n        Idi(tabla, x, y, Smjerovi::DoljeDesno);\n        std::cout << x << \" \" << y << std::endl;\n        Idi(tabla, x, y, Smjerovi::Dolje);\n        std::cout << x << \" \" << y << std::endl;\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 1\n2 1\n"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 6,
            "name": "Test 6",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/AT 5: Test funkcije Idi sa 5 parametara\n    {\n        std::vector<std::vector<int>> mine = {{0,2}, {1,3}, {1,5}, {4,2}, {5,1}, {5,5}} ;\n        std::vector<std::vector<Polje>> tabla = KreirajIgru(6, mine);\n        int x = 0, y = 0;\n        Idi(tabla, x, y, 1, 1);\n        std::cout << x << \" \" << y << std::endl;\n        Idi(tabla, x, y, 2, 1);\n        std::cout << x << \" \" << y << std::endl;\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "1 1\n2 1\n"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 7,
            "name": "Test 7",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/AT 6: Test main-a (funkcije UnosKomande i IzvrsiKomandu)\n    {\n        \/\/ Oblik main funkcije je definiran ovim testom (u slucaju nedorecenosti u postavci zadace).\n        \/\/ Napomena: Pretpostavka je da igrac krece od pozicije (0,0), te da se tu ne nalazi mina!\n\n        _main();\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "environment": {
                    "stdin": "K\n5\n(0,1)\n(0,4)\nf\n(9)\n(0,6)\n(1,3)\n(1,4)\n(2,0)\n(2,1)\n(2,3)\n.\nP1 DoD\nPO\nZ\n"
                },
                "expect": [
                    "Unesite komandu: Unesite broj polja: Unesite pozicije mina: Greska, unesite ponovo!\nGreska, unesite ponovo!\nGreska, unesite ponovo!\nUnesite komandu: Tekuca pozicija igraca je (1,1)\nUnesite komandu: 1 0 2 \n3 3 4 \n1 1 3 \nUnesite komandu: Dovidjenja!"
                ]
            },
            "debug": [],
            "profile[memcheck]": {
                "environment": {
                    "stdin": "K\n5\n(0,1)\n(0,4)\nf\n(9)\n(0,6)\n(1,3)\n(1,4)\n(2,0)\n(2,1)\n(2,3)\n.\nP1 DoD\nPO\nZ"
                }
            },
            "profile[sgcheck]": {
                "environment": {
                    "stdin": "K\n5\n(0,1)\n(0,4)\nf\n(9)\n(0,6)\n(1,3)\n(1,4)\n(2,0)\n(2,1)\n(2,3)\n.\nP1 DoD\nPO\nZ"
                }
            }
        },
        {
            "id": 8,
            "name": "Test 8",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/AT 7: Test main-a (funkcije UnosKomande i IzvrsiKomandu - sa dodatnim razmacima)\n    {\n        \/\/ Oblik main funkcije je definiran ovim testom (u slucaju nedorecenosti u postavci zadace).\n        \/\/ Napomena: Pretpostavka je da igrac krece od pozicije (0,0), te da se tu ne nalazi mina!\n\n        _main();\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "environment": {
                    "stdin": "K\n5\n(    0 ,    1 )\n(0,4)\n(1 ,3        )\n(    1 , 4               )\n(2,0)\n(2,3)\n.\nB 1 2\nP> 1 2\nD 1 2\nP> 1 2\nZ\n"
                },
                "expect": [
                    "Unesite komandu: Unesite broj polja: Unesite pozicije mina: Unesite komandu: Unesite komandu: Blokirano polje\nUnesite komandu: Unesite komandu: Tekuca pozicija igraca je (1,2)\nUnesite komandu: Dovidjenja!"
                ]
            },
            "debug": [],
            "profile[memcheck]": {
                "environment": {
                    "stdin": "K\n5\n(    0 ,    1 )\n(0,4)\n(1 ,3        )\n(    1 , 4               )\n(2,0)\n(2,3)\n.\nB 1 2\nP> 1 2\nD 1 2\nP> 1 2\nZ"
                }
            },
            "profile[sgcheck]": {
                "environment": {
                    "stdin": "K\n5\n(    0 ,    1 )\n(0,4)\n(1 ,3        )\n(    1 , 4               )\n(2,0)\n(2,3)\n.\nB 1 2\nP> 1 2\nD 1 2\nP> 1 2\nZ"
                }
            }
        },
        {
            "id": 9,
            "name": "Test 9",
            "patch": [
                {
                    "position": "top_of_file",
                    "code": "\/\/ Tehnike programiranja - Akademska 2020\/2021 godina\n\/\/ Zadaca 2 - Zadatak 1\n\/\/ Odgovorni asistent: Haris Capelj - hcapelj1@etf.unsa.ba\n\/\/ Za sva tehnicka pitanja vezana za autotestove za zadatak 1, obratite se na navedeni mail.\n\/\/ Napomena: Kao sto je definirano postavkom zadace, koristiti .at() umjesto []. Bit ce autotestirano i bodovano shodno postavci zadace!\n",
                    "use_markers": true
                },
                {
                    "position": "main",
                    "code": "\/\/AT 8: Unos svih greski u funkciju UnosKomande\n    {\n        while (true)\n        {\n            Komande komanda  = Komande::PomjeriDalje;\n            Smjerovi smjer;\n            int x = 0, y = 0;\n            KodoviGresaka greska = KodoviGresaka::SuvisanParametar;\n            UnosKomande(komanda, smjer, x, y, greska);\n            if(komanda == Komande::ZavrsiIgru)\n                break;\n            std::cout << int(greska) << \" \";\n        }\n    }",
                    "use_markers": true
                }
            ],
            "compile": [],
            "compile[debug]": [],
            "execute": {
                "environment": {
                    "stdin": "a\nabc\n2\nP2\nP1\nP>\nB\nD\nP1 2\nP> nesto\nK nesto\nP> 1 2 nesto\nZ"
                },
                "expect": [
                    "0 0 0 0 1 1 1 1 3 3 2 3"
                ]
            },
            "debug": [],
            "profile[memcheck]": {
                "environment": {
                    "stdin": "a\nabc\n2\nP2\nP1\nP>\nB\nD\nP1 2\nP> nesto\nK nesto\nP> 1 2 nesto\nZ"
                }
            },
            "profile[sgcheck]": {
                "environment": {
                    "stdin": "a\nabc\n2\nP2\nP1\nP>\nB\nD\nP1 2\nP> nesto\nK nesto\nP> 1 2 nesto\nZ"
                }
            }
        }
    ]
}