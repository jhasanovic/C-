==705== Memcheck, a memory error detector
==705== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==705== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==705== Command: /rhome/j/jhasanovic1/workspace/TP/Z2/Z4/.runme
==705== Parent PID: 697
==705== 
==705== 
==705== Process terminating with default action of signal 24 (SIGXCPU): dumping core
==705==    at 0x53D5EB0: sqrt (w_sqrt_compat.c:30)
==705==    by 0x108D84: __gnu_cxx::__enable_if<std::__is_integer<int>::__value, double>::__type std::sqrt<int>(int) (cmath:476)
==705==    by 0x108A66: BrojDjelilaca(int) (main.cpp:9)
==705==    by 0x108AEB: KriterijSortiranja(int, int) (main.cpp:21)
==705==    by 0x109718: bool __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)>::operator()<int*, int*>(int*, int*) (predefined_ops.h:143)
==705==    by 0x1096B4: int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)> >(int*, int*, int*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)>) (stl_algo.h:1905)
==705==    by 0x1092EF: int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)> >(int*, int*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)>) (stl_algo.h:1923)
==705==    by 0x10907F: void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)> >(int*, int*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)>) (stl_algo.h:1952)
==705==    by 0x108F11: void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)> >(int*, int*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(int, int)>) (stl_algo.h:1968)
==705==    by 0x108DCA: void std::sort<int*, bool (*)(int, int)>(int*, int*, bool (*)(int, int)) (stl_algo.h:4868)
==705==    by 0x108B50: SortirajPoBrojuDjelilaca(int*, int) (main.cpp:28)
==705==    by 0x108BFE: main (main.cpp:69)
==705== 
==705== HEAP SUMMARY:
==705==     in use at exit: 0 bytes in 0 blocks
==705==   total heap usage: 1 allocs, 1 frees, 72,704 bytes allocated
==705== 
==705== All heap blocks were freed -- no leaks are possible
==705== 
==705== For counts of detected and suppressed errors, rerun with: -v
==705== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
